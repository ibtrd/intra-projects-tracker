services:
  nginx:
    image: nginx
    restart: always 
    volumes:
    - ./nginx:/etc/nginx/templates
    ports:
    - "8080:443"
    environment:
    - NGINX_HOST= ${NGINX_HOST}
    secrets:
      - ssl_cert
      - ssl_key

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: always  
    volumes:
      - ./server/srcs:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      API42_UID: ${API42_UID}
      API42_SECRET: ${API42_SECRET}
      API42_REDIRECT_URI: ${API42_REDIRECT_URI}
      API_MASTER_KEY: ${API_MASTER_KEY}
      API42_DEV: true
      MONGO_URL: ${MONGO_URL}
      MONGO_DATABASE: ${MONGO_DATABASE}
  
  bot:
    build:
      context: ./discord-bot
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./discord-bot/srcs:/app
      - /app/node_modules
    environment:
      API42_UID: ${API42_UID}
      API42_SECRET: ${API42_SECRET}
      API42_REDIRECT_URI: ${API42_REDIRECT_URI}
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      MONGO_URL: ${MONGO_URL}
      MONGO_DATABASE: ${MONGO_DATABASE}
      API_MASTER_KEY: ${API_MASTER_KEY}

  mongo:
    image: mongo
    restart: always
    volumes:
      - database:/data/db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: ${MONGO_URL}
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_WEB_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_WEB_PASSWORD}

volumes:
  database:
  redis:

secrets:
  ssl_cert:
    file: ./secrets/ssl/localhost.crt
  ssl_key:
    file: ./secrets/ssl/localhost.key
