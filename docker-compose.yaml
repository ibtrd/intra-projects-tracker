services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: server
    restart: always
    ports:
      - 4000:4000   
    volumes:
      - ./server/srcs:/app
      - /app/node_modules
    environment:
      API42_UID: ${API42_UID}
      API42_SECRET: ${API42_SECRET}
      API42_DEV: true
      MONGO_URL: ${MONGO_URL}
      MONGO_DATABASE: ${MONGO_DATABASE}
  
  bot:
    build:
      context: ./discord-bot
      dockerfile: Dockerfile.dev
    container_name: bot
    restart: always
    volumes:
      - ./discord-bot/srcs:/app
      - /app/node_modules
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      MONGO_URL: ${MONGO_URL}
    depends_on:
      - server

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - database:/data/db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: ${MONGO_URL}
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_WEB_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_WEB_PASSWORD}

volumes:
  database:
  redis:
