services:
  nginx:
    image: nginx
    restart: always 
    volumes:
    - ./nginx:/etc/nginx/templates
    ports:
    - "127.0.0.1:8081:443"
    environment:
    - NGINX_HOST= ${NGINX_HOST}
    networks:
      - webnet

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    restart: always  
    environment:
      API42_UID: ${API42_UID}
      API42_SECRET: ${API42_SECRET}
      API42_REDIRECT_URI: ${API42_REDIRECT_URI}
      API_MASTER_KEY: ${API_MASTER_KEY}
      MONGO_URL: ${MONGO_URL}
      MONGO_DATABASE: ${MONGO_DATABASE}
    networks:
      - webnet
      - discord-bot
      - database

  bot:
    build:
      context: ./discord-bot
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      API42_UID: ${API42_UID}
      API42_SECRET: ${API42_SECRET}
      API42_REDIRECT_URI: ${API42_REDIRECT_URI}
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      MONGO_URL: ${MONGO_URL}
      MONGO_DATABASE: ${MONGO_DATABASE}
      API_MASTER_KEY: ${API_MASTER_KEY}
      networks:
        - discord-bot
        - database

  mongo:
    image: mongo
    restart: always
    volumes:
      - database:/data/db
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    networks:
      - database

volumes:
  database:

networks:
  webnet:
    driver: bridge
  discord-bot:
    driver: bridge
  database:
    driver: bridge
